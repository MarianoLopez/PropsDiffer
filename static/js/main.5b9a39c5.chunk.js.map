{"version":3,"sources":["component/custom/tab/TabWrapper.js","component/custom/tab/TabZ.js","component/custom/snippet/PropertiesCodeSnippet.js","component/custom/file/Uploader.js","component/custom/snippet/PropertiesDiffCodeSnippet.js","service/PropertiesService.js","transformer/MapTransformer.js","component/container/CodeSnippetTab.js","component/custom/toolbar/IconToolBar.js","component/custom/toolbar/CopyDownloadToolBar.js","component/container/PropertiesForm.js","transformer/FileTransformer.js","App.js","serviceWorker.js","index.js"],"names":["TabWrapper","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","TabZ","titles","selectedTab","useState","state","setState","handleTabChange","event","newValue","TabHeader","AppBar","position","Tabs","onChange","map","title","Tab","key","label","TabBody","child","PropertiesCodeSnippet","code","description","props","Grid","container","Typography","variant","justify","item","language","showLineNumbers","useStyles","makeStyles","pad","padding","Uploader","filesLimit","acceptedFiles","classes","Card","className","files","defaultDiffLineStyle","lineNumber","show","style","backgroundColor","display","PropertiesDiffCodeSnippet","labelA","labelB","diffLineStyle","options","selectedOption","handleRadioChange","target","RadioGroupBody","option","FormControlLabel","control","Radio","CodeSnippetOptions","FormControl","component","FormLabel","RadioGroup","name","wrapLines","lineProps","getMissingProps","propsA","propsB","array","validateProps","keys","filter","prop","has","sort","get","Map","mapToProperties","Array","from","entries","reduce","accumulator","currentValue","buildPropertyEntry","toString","CodeSnippetTab","propertiesA","propertiesB","useEffect","nameA","propertyFileA","propertyFile","nameB","propertyFileB","missingPropsMap","unMatchPropsMap","getPropsWithUnMatchedValues","extraPropsMap","size","current","old","ToolBarItem","icon","onClick","undefined","this","IconToolBar","toolBarItems","elevation","IconButton","color","margin","CopyDownloadToolBar","open","vertical","horizontal","autoHideDuration","onCopy","text","result","CopyItem","FileCopy","toolbarItems","GetApp","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","Snackbar","anchorOrigin","onClose","Alert","severity","PropertiesForm","onSubmit","filesMinCount","uploadCount","uploaders","handleChange","uploaderIndex","findIndex","obj","uploader","Promise","resolve","reject","reader","FileReader","onload","onerror","readAsText","readFileAsync","then","content","split","line","includes","keyValue","fileToMap","DropZones","spacing","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b9a39c5.chunk.js","sourcesContent":["import Box from \"@material-ui/core/Box\";\nimport React from \"react\";\n\nconst TabWrapper = ({children, value, index, ...other}) => {\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}>\n            {value === index && (\n                <Box p={1}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n};\n\nexport default TabWrapper;","import AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport React, {useState} from \"react\";\nimport TabWrapper from \"./TabWrapper\";\n\n\nconst TabZ = ({titles, children, selectedTab = 0}) => {\n\n    const [state, setState] = useState({\n        selectedTab: selectedTab,\n    });\n\n    const handleTabChange = (event, newValue) => {\n        setState({\n            selectedTab: newValue\n        });\n    };\n\n    const TabHeader = () => {\n        return (\n            <AppBar position=\"static\">\n                <Tabs value={state.selectedTab} onChange={handleTabChange}>\n                    {titles.map((title, index) => <Tab key={index} label={title}/>)}\n                </Tabs>\n            </AppBar>\n        );\n    };\n\n    const TabBody = () => {\n        return children.map((child, index) => {\n            return (\n                <TabWrapper key={index} value={state.selectedTab} index={index}>\n                    {child}\n                </TabWrapper>\n            );\n        });\n    };\n\n    return (\n        <>\n            <TabHeader/>\n            <TabBody/>\n        </>\n    );\n};\n\nexport default TabZ;","import React from \"react\";\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {CopyDownloadToolBar} from \"../../index\";\n\nconst PropertiesCodeSnippet = ({code, description, ...props}) => {\n    return (\n        <Grid container>\n            <Grid container>\n                <Grid>\n                    <Typography variant=\"subtitle2\">\n                        {description}\n                    </Typography>\n                </Grid>\n                <Grid container justify=\"flex-end\">\n                    <Grid item>\n                        <CopyDownloadToolBar value={code} />\n                    </Grid>\n                </Grid>\n                <Grid>\n                    <SyntaxHighlighter language=\"properties\" showLineNumbers={true} {...props}>\n                        {code}\n                    </SyntaxHighlighter>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PropertiesCodeSnippet;","import Typography from \"@material-ui/core/Typography\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n\nconst useStyles = makeStyles(() => ({\n    pad: {\n        padding: 5\n    }\n}));\n\nconst Uploader = ({id, title, description, filesLimit = 1, acceptedFiles = [\"*\"], onChange, ...props}) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.pad} >\n            <Typography variant=\"subtitle2\">{title}</Typography>\n            <Typography variant=\"caption\">{description}</Typography>\n            <DropzoneArea\n                filesLimit={filesLimit}\n                acceptedFiles={acceptedFiles}\n                onChange={files => onChange(files, id)}\n                {...props}\n            />\n        </Card>\n    );\n};\n\nexport default Uploader;","import React, {useState} from \"react\";\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport {CopyDownloadToolBar} from \"../../index\";\n\nconst addedColor = '#cfc';\nconst removedColor = '#fdd';\nconst isEven = (number) => number % 2 === 0;\n\nconst defaultDiffLineStyle = (lineNumber, show) => {\n    let style = {};\n\n    if (!isEven(lineNumber)) {\n        if (show === 'diff') style.backgroundColor = addedColor;\n        style.display = (show === 'diff' || show === 'sideA') ? 'block' : 'none';\n    } else {\n        if (show === 'diff') style.backgroundColor = removedColor;\n        style.display = (show === 'diff' || show === 'sideB') ? 'block' : 'none';\n    }\n\n    return {style};\n};\nconst defaultLabelA = \"Side A\";\nconst defaultLabelB = \"Side B\";\nconst PropertiesDiffCodeSnippet = ({code, labelA, labelB,  diffLineStyle = defaultDiffLineStyle, ...props}) => {\n    let options = [\n        {id: \"diff\", label: \"Diff\"},\n        {id: \"sideA\", label: labelA || defaultLabelA},\n        {id: \"sideB\", label: labelB || defaultLabelB}\n    ];\n\n    const [state, setState] = useState({\n        selectedOption: options[0].id,\n        code: code\n    });\n\n    const handleRadioChange = (event) => {\n        setState({\n            ...state,\n            selectedOption: event.target.value\n        });\n    };\n\n    const RadioGroupBody = () => options.map(option => {\n        return <FormControlLabel key={option.id} value={option.id} control={<Radio/>} label={option.label}/>\n    });\n\n    const CodeSnippetOptions = () => {\n        return (\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Show</FormLabel>\n                <RadioGroup name=\"snippetOptions\" value={state.selectedOption} onChange={handleRadioChange}>\n                    <Grid item>\n                        <RadioGroupBody/>\n                    </Grid>\n                </RadioGroup>\n            </FormControl>\n        );\n    };\n\n    return (\n        <>\n            <Grid container>\n                <Grid item>\n                    <CodeSnippetOptions/>\n                </Grid>\n                <Grid container justify=\"flex-end\">\n                    <Grid item>\n                        <CopyDownloadToolBar value={code} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid container>\n                <SyntaxHighlighter language=\"properties\" showLineNumbers={state.selectedOption !== 'diff'}\n                                   wrapLines={true}\n                                   lineProps={lineNumber => diffLineStyle(lineNumber, state.selectedOption)}\n                                   {...props}>\n                    {state.code}\n                </SyntaxHighlighter>\n            </Grid>\n        </>\n    );\n};\n\nexport default PropertiesDiffCodeSnippet;","export const getMissingProps = (propsA, propsB) => {\n    let array = validateProps(propsA, propsB) ?\n        [...propsB.keys()]\n            .filter(prop => !propsA.has(prop))\n            .sort()\n            .map(prop => [prop, propsB.get(prop)])\n        : [];\n    return new Map(array);\n};\n\nexport const getExtraProps = (propsA, propsB) => getMissingProps(propsB, propsA);\n\nexport const getPropsWithUnMatchedValues = (propsA, propsB) => {\n    let array = validateProps(propsA, propsB) ?\n            [...propsB.keys()]\n                .filter(prop => propsA.has(prop))\n                .sort()\n                .filter(prop => propsA.get(prop) !== propsB.get(prop))\n                .map(prop => [prop, [propsA.get(prop), propsB.get(prop)]])\n        : [];\n    return new Map(array);\n};\n\nconst validateProps = (propsA, propsB) => !(propsA == null || propsB == null);","const newLine = \"\\n\";\n\nexport const mapToProperties = (map) => {\n    return Array.from(map.entries()).reduce((accumulator, currentValue) => {\n        let [key, value] = currentValue;\n        return accumulator + buildPropertyEntry(key, value);\n    }, \"\")\n};\n\nexport const mapToDiffProperties = (map) => {\n    return Array.from(map.entries()).reduce((accumulator, currentValue) => {\n        let key = currentValue[0];\n        let [current, old] = currentValue[1];\n        return accumulator + buildPropertyEntry(key, current) + buildPropertyEntry(key, old);\n    }, \"\")\n};\n\nconst buildPropertyEntry = (key, value) => key.toString() + \"=\" + value.toString() + newLine;","import TabZ from \"../custom/tab/TabZ\";\nimport PropertiesDiffCodeSnippet from \"../custom/snippet/PropertiesDiffCodeSnippet\";\nimport {PropertiesCodeSnippet} from \"../index\";\nimport React, {useEffect, useState} from \"react\";\nimport {getExtraProps, getMissingProps, getPropsWithUnMatchedValues} from \"../../service/PropertiesService\";\nimport {mapToDiffProperties, mapToProperties} from \"../../transformer/MapTransformer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\n\n\nconst CodeSnippetTab = ({propertiesA, propertiesB}) => {\n    const [state, setState] = useState({\n        propertiesA, propertiesB\n    });\n\n    useEffect(() => {\n        setState({propertiesA, propertiesB})\n    }, [propertiesA, propertiesB]);\n\n    //Object_destructuring Assigning to new variable names\n    const {name: nameA, propertyFile: propertyFileA} = state.propertiesA;\n    const {name: nameB, propertyFile: propertyFileB} = state.propertiesB;\n\n    const missingPropsMap = getMissingProps(propertyFileA, propertyFileB);\n    const unMatchPropsMap = getPropsWithUnMatchedValues(propertyFileA, propertyFileB);\n    const extraPropsMap = getExtraProps(propertyFileA, propertyFileB);\n\n    return (\n        <Card>\n            <TabZ titles={[\n                `Unmatched properties (${unMatchPropsMap.size})`,\n                `Missing properties (${missingPropsMap.size})`,\n                `Extra properties (${extraPropsMap.size})`\n            ]}>\n                <PropertiesDiffCodeSnippet code={mapToDiffProperties(unMatchPropsMap)} labelA={nameA} labelB={nameB}/>\n                <PropertiesCodeSnippet code={mapToProperties(missingPropsMap)} description={`Missing in ${nameA} but present in ${nameB}`}/>\n                <Grid>\n                    <Typography variant=\"subtitle2\">\n                        Missing in {nameB} but present in {nameA}\n                    </Typography>\n                    <PropertiesCodeSnippet code={mapToProperties(extraPropsMap)}/>\n                </Grid>\n            </TabZ>\n        </Card>\n    );\n};\n\nexport default CodeSnippetTab;","import IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\n\nexport function ToolBarItem(icon, onClick = undefined) {\n    this.icon = icon;\n    this.onClick = onClick;\n}\n\nconst IconToolBar = ({toolBarItems}) => {\n    return (\n        <Card elevation={1}>\n            {toolBarItems.map((item, index) => {\n                return (\n                    <IconButton key={index} color=\"primary\"\n                                style={{margin:5}}\n                                component=\"span\" size=\"small\" onClick={() => {if (item.onClick) item.onClick();}}>\n                        {item.icon}\n                    </IconButton>\n                );\n            })}\n        </Card>\n    );\n};\n\nexport default IconToolBar;","import {ToolBarItem} from \"./IconToolBar\";\nimport {FileCopy, GetApp} from \"@material-ui/icons\";\nimport {IconToolBar} from \"../../index\";\nimport React, {useState} from \"react\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from '@material-ui/lab/Alert';\n\nconst CopyDownloadToolBar = ({value, name = \"application\"}) => {\n    const [state, setState] = useState({\n        open: false,\n        vertical: 'bottom',\n        horizontal: 'right',\n        autoHideDuration: 5000\n    });\n\n    const onCopy = (text, result) => setState({\n        ...state,\n        open: result\n    });\n\n    const onCloseSnack = () => setState({\n        ...state,\n        open: false\n    });\n\n\n    const dispatchDownload = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([value], {type: 'text/x-java-properties'});\n        element.href = URL.createObjectURL(file);\n        element.download = `${name}.properties`;\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    };\n\n    const CopyItem = () => {\n        return (\n            <CopyToClipboard text={value} onCopy={onCopy}>\n                <FileCopy/>\n            </CopyToClipboard>\n        );\n    };\n    const {vertical, horizontal, open, autoHideDuration} = state;\n    const toolbarItems = [\n        new ToolBarItem(<CopyItem/>),\n        new ToolBarItem(<GetApp/>, dispatchDownload),\n    ];\n    return (\n        <>\n            <IconToolBar toolBarItems={toolbarItems}/>\n            <Snackbar\n                anchorOrigin={{vertical, horizontal}}\n                open={open}\n                autoHideDuration={autoHideDuration}\n                onClose={onCloseSnack}\n                key={vertical + horizontal}>\n                <Alert severity=\"success\">\n                    Code copied to clipboard!\n                </Alert>\n            </Snackbar>\n        </>\n    );\n};\n\nexport default CopyDownloadToolBar;","import React, {useEffect, useState} from 'react';\nimport {fileToMap} from \"../../transformer/FileTransformer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Uploader} from \"../index\";\n\nconst PropertiesForm = ({onSubmit}) => {\n    const [state, setState] = useState({\n        filesMinCount: 2,\n        uploadCount: 0,\n        acceptedFiles: ['.properties'],\n        uploaders: [\n            {id: 0, label: \"Side A\", name: \"\", propertyFile: {}},\n            {id: 1, label: \"Side B\", name: \"\", propertyFile: {}}\n        ]\n    });\n\n    const readFileAsync = (file) => {\n        return new Promise((resolve, reject) => {\n            let reader = new FileReader();\n\n            reader.onload = () => {\n                resolve(reader.result);\n            };\n            reader.onerror = reject;\n            reader.readAsText(file, \"UTF-8\");\n        })\n    };\n\n    const handleChange = (files, id) => {\n        let file = files[0];\n        if (file) {\n            let uploaders = state.uploaders;\n            let uploaderIndex = uploaders.findIndex(obj=> obj.id === id);\n            let uploader = uploaders[uploaderIndex];\n\n            readFileAsync(file).then(content => {\n                uploader.name = file.name;\n                uploader.propertyFile = fileToMap(content);\n\n                setState({\n                    ...state,\n                    uploaders,\n                    uploadCount: state.uploadCount + 1\n                })\n            });\n        }\n    };\n\n    const dispatchSubmit = () => {\n        if (state.uploadCount >= state.filesMinCount) {\n            onSubmit(state.uploaders[0], state.uploaders[1])\n        }\n    };\n\n    useEffect(dispatchSubmit, [state.uploadCount]);\n\n    const DropZones = () => {\n        return state.uploaders.map(uploader => {\n            return <Uploader key={uploader.id} id={uploader.id}\n                             title={uploader.label} description={uploader.name}\n                             acceptedFiles={state.acceptedFiles} onChange={handleChange}/>\n        });\n    };\n    return (\n        <Grid container spacing={4}>\n            <Grid item>\n                <DropZones/>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PropertiesForm;\n","export const fileToMap = (file) => {\n    return new Map(\n        file.split(/\\r\\n|\\n/)\n            .filter(line => line !== \"\" && line.includes(\"=\"))\n            .map(line => {\n                let keyValue = line.split('=');\n                return [keyValue[0], keyValue[1]]\n            })\n    );\n};","import React, {useState} from 'react';\nimport PropertiesForm from \"./component/container/PropertiesForm\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport {CodeSnippetTab} from \"./component\";\n\n\nexport default () => {\n    const [state, setState] = useState({\n        propertiesA: {name: \"\", propertyFile: null},\n        propertiesB: {name: \"\", propertyFile: null}\n    });\n\n    const onSubmit = (propertiesA, propertiesB) => {\n        setState({propertiesA, propertiesB})\n    };\n\n    return (\n        <Card style={{padding: 5}}>\n            <Grid container spacing={1}>\n                <Grid item xs={2}>\n                    <PropertiesForm onSubmit={onSubmit}/>\n                </Grid>\n                <Grid item xs={10}>\n                    <CodeSnippetTab propertiesA={state.propertiesA} propertiesB={state.propertiesB}/>\n                </Grid>\n            </Grid>\n        </Card>\n\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}